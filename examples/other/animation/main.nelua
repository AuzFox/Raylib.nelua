require "raylib"

local SCREEN_WIDTH: uint16 <const> = 800
local SCREEN_HEIGHT: uint16 <const> = 450

rl.setConfigFlags(rl.configFlags.VSYNC_HINT)

rl.initWindow(SCREEN_WIDTH, SCREEN_HEIGHT, "Raylib.nelua [other] example - raylib logo animation")

local logoPositionX = SCREEN_WIDTH / 2 - 128
local logoPositionY = SCREEN_HEIGHT / 2 - 128

local framesCounter = 0
local lettersCount = 0

local topSideRecWidth = 16
local leftSideRecHeight = 16

local bottomSideRecWidth = 16
local rightSideRecHeight = 16

local state = 0
local alpha = 1.0

local lua_color = rl.color({3, 3, 128, 255})

local function Fade(color: rl.color, alpha: float64)
    return rl.color({color.r * alpha, color.g * alpha, color.b * alpha, color.a * alpha})
end

while not rl.windowShouldClose() do
    if state == 0 then
        framesCounter = framesCounter + 1

        if framesCounter == 120 then
            state = 1
            framesCounter = 0
        end
    elseif state == 1 then
        topSideRecWidth = topSideRecWidth + 4
        leftSideRecHeight = leftSideRecHeight + 4

        if topSideRecWidth == 256 then
            state = 2
        end
    elseif state == 2 then
        bottomSideRecWidth = bottomSideRecWidth + 4
        rightSideRecHeight = rightSideRecHeight + 4

        if bottomSideRecWidth == 256 then
            state = 3
        end
    elseif state == 3 then
        framesCounter = framesCounter + 1

        if math.floor(framesCounter / 12) == 1 then
            lettersCount = lettersCount + 1
            framesCounter = 0
        end

        if lettersCount >= 10 then
            alpha = alpha - 0.02

            if alpha <= 0.0 then
                alpha = 0.0
                state = 4
            end
        end
    elseif state == 4 then
        if rl.isKeyPressed(rl.keyboardKey.R) then
            framesCounter = 0
            lettersCount = 0

            topSideRecWidth = 16
            leftSideRecHeight = 16

            bottomSideRecWidth = 16
            rightSideRecHeight = 16

            alpha = 1.0
            state = 0
        end
    end

    rl.beginDrawing()

    rl.clearBackground(rl.RAYWHITE)

    if state == 0 then
        if math.floor(framesCounter / 15) % 2 == 1 then
            rl.drawRectangle(logoPositionX, logoPositionY, 16, 16, lua_color)
        end
    elseif state == 1 then
        rl.drawRectangle(logoPositionX, logoPositionY, topSideRecWidth, 16, lua_color)
        rl.drawRectangle(logoPositionX, logoPositionY, 16, leftSideRecHeight, lua_color)
    elseif state == 2 then
        rl.drawRectangle(logoPositionX, logoPositionY, topSideRecWidth, 16, lua_color)
        rl.drawRectangle(logoPositionX, logoPositionY, 16, leftSideRecHeight, lua_color)

        rl.drawRectangle(logoPositionX + 240, logoPositionY, 16, rightSideRecHeight, lua_color)
        rl.drawRectangle(logoPositionX, logoPositionY + 240, bottomSideRecWidth, 16, lua_color)
    elseif state == 3 then
        rl.drawRectangle(logoPositionX, logoPositionY, topSideRecWidth, 16, Fade(lua_color, alpha))
        rl.drawRectangle(logoPositionX, logoPositionY + 16, 16, leftSideRecHeight - 32, Fade(lua_color, alpha))

        rl.drawRectangle(logoPositionX + 240, logoPositionY + 16, 16, rightSideRecHeight - 32, Fade(lua_color, alpha))
        rl.drawRectangle(logoPositionX, logoPositionY + 240, bottomSideRecWidth, 16, Fade(lua_color, alpha))

        rl.drawRectangle(SCREEN_WIDTH / 2 - 112, SCREEN_HEIGHT / 2 - 112, 224, 224, Fade(rl.RAYWHITE, alpha))

        rl.drawText(
            string.sub("raylib", 0, lettersCount),
            SCREEN_WIDTH / 2 - 44,
            SCREEN_HEIGHT / 2 + 24,
            50,
            Fade(lua_color, alpha)
            )
        rl.drawText(
            string.sub("Lua", 0, math.max(0, lettersCount - 3)),
            SCREEN_WIDTH / 2 - 44,
            SCREEN_HEIGHT / 2 + 65,
            50,
            Fade(lua_color, alpha)
            )
    elseif state == 4 then
        rl.drawText("[R] REPLAY", 340, 200, 20, rl.GRAY)
    end

    rl.endDrawing()
end

rl.closeWindow()
